{"version":3,"sources":["SignUp.jsx"],"names":["SignUp","useProfile","profileData","setProfileData","useState","data","setData","history","useHistory","apiError","setApiError","useEffect","name","push","handleChange","value","prev","handleSubmit","e","a","preventDefault","fetch","method","headers","credentials","body","JSON","stringify","cache","referrerPolicy","response","status","json","jsResponse","text","textResponse","className","onSubmit","type","placeholder","onChange","autoComplete","checked","level","showError","exists","errorContent","content","to"],"mappings":"qOA0IeA,UAlIA,WACX,MAAsCC,cAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eACpB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACIC,EAAUC,cACd,EAAgCJ,mBAAS,CAAC,QAAU,EAAO,QAAW,KAAtE,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACkB,MAApBT,EAAYU,MACZL,EAAQM,KAAK,gBAElB,CAACX,IAEJ,IAAMY,EAAe,SAACF,EAAMG,GACxB,OAAQT,GAAQ,SAAAU,GACZ,OAAO,YAAC,eAAIA,GAAZ,kBAAmBJ,EAAOG,QAI5BE,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBADe,SAGIC,MAAM,qBAAsB,CAC7CC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,YAAa,UACbC,KAAMC,KAAKC,UAAUtB,GACrBuB,MAAO,WACPC,eAAgB,gBAZH,UAeO,OAZpBC,EAHa,QAeJC,OAfI,iCAgBUD,EAASE,OAhBnB,OAgBTC,EAhBS,OAiBb9B,GAAe,kBAAM8B,KAjBR,2BAkBc,MAApBH,EAASC,OAlBH,kCAmBcD,EAASI,OAnBvB,QAmBPC,EAnBO,OAoBbzB,GAAY,WACJ,MAAO,CAAC,QAAU,EAAM,QAAWyB,MArB9B,wBAyBbzB,GAAY,WACR,MAAO,CAAC,QAAU,EAAM,QAAW,4BA1B1B,4CAAH,sDAgClB,OAAQ,sBAAK0B,UAAW,YAAhB,UACA,yCACA,uBAAMC,SAAU,SAACnB,GAAD,OAAOD,EAAaC,IAApC,UACI,cAAC,IAAD,CACIN,KAAK,OACL0B,KAAK,OACLC,YAAY,WACZC,SAAU1B,EACVsB,UAAW,aAEf,cAAC,IAAD,CACIxB,KAAK,QACL0B,KAAK,QACLC,YAAY,QACZC,SAAU1B,EACVsB,UAAW,aAEf,qBAAKA,UAAW,eAAhB,SACI,kCACI,uBACIK,aAAc,MACd7B,KAAK,QACL0B,KAAK,QACLvB,MAAM,eACN2B,QAAwB,IAAfrC,EAAKsC,MACdH,SAAU,kBAAM1B,EAAa,QAAS,MAP9C,oBAYJ,qBAAKsB,UAAW,eAAhB,SACI,kCACI,uBACIK,aAAc,MACd7B,KAAK,QACL0B,KAAK,QACLvB,MAAM,gBACN2B,QAAwB,IAAfrC,EAAKsC,MACdH,SAAU,kBAAM1B,EAAa,QAAS,MAP9C,qBAYJ,qBAAKsB,UAAW,eAAhB,SACI,kCACI,uBACIK,aAAc,MACd7B,KAAK,QACL0B,KAAK,QACLvB,MAAM,aACN2B,QAAwB,IAAfrC,EAAKsC,MACdH,SAAU,kBAAM1B,EAAa,QAAS,MAP9C,kBAYJ,cAAC,IAAD,CACIF,KAAK,WACL0B,KAAK,WACLC,YAAY,WACZC,SAAU1B,EACVsB,UAAW,aAEf,yBAAQE,KAAK,SAASvB,MAAM,SAASqB,UAAW,UAAhD,UACI,yBACA,yBACA,yBACA,yBAJJ,gBAQJ,cAAC,IAAD,CAAcQ,UAAWnC,EAASoC,OAAQC,aAAcrC,EAASsC,UACjE,eAAC,IAAD,CAAMC,GAAI,SAAUZ,UAAW,SAA/B,UACI,yBACA,yBACA,yBACA,yBAJJ","file":"static/js/8.f907b448.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useProfile} from \"./ProfileContext\";\r\nimport InputField from \"./InputField\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ErrorDisplay from \"./ErrorDisplay\";\r\nimport \"./Login.css\";\r\n\r\n\r\nconst SignUp = () => {\r\n    const {profileData, setProfileData} = useProfile();\r\n    const [data, setData] = useState({});\r\n    let history = useHistory();\r\n    const [apiError, setApiError] = useState({\"exists\": false, \"content\": \"\"});\r\n\r\n    useEffect(() => {\r\n        if (profileData.name != null) {\r\n            history.push(\"/dashboard\")\r\n        }\r\n    }, [profileData]);\r\n\r\n    const handleChange = (name, value) => {\r\n        return (setData(prev => {\r\n            return ({...prev, [name]: value})\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let response = await fetch(\"/api/createAccount\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify(data),\r\n            cache: 'no-cache',\r\n            referrerPolicy: 'no-referrer',\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            let jsResponse = await response.json();\r\n            setProfileData(() => jsResponse);\r\n        } else if (response.status === 401) {\r\n            const textResponse = await response.text();\r\n            setApiError(() => {\r\n                    return {\"exists\": true, \"content\": textResponse}\r\n                }\r\n            );\r\n        } else {\r\n            setApiError(() => {\r\n                return {\"exists\": true, \"content\": \"Internal Server Error\"}\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (<div className={\"login-box\"}>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <InputField\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    onChange={handleChange}\r\n                    className={\"user-box\"}\r\n                />\r\n                <InputField\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    className={\"user-box\"}\r\n                />\r\n                <div className={\"radio-button\"}>\r\n                    <label>\r\n                        <input\r\n                            autoComplete={\"off\"}\r\n                            name=\"level\"\r\n                            type=\"radio\"\r\n                            value=\"Least Access\"\r\n                            checked={data.level === 0}\r\n                            onChange={() => handleChange(\"level\", 0)}\r\n                        />\r\n                        Least Access\r\n                    </label>\r\n                </div>\r\n                <div className={\"radio-button\"}>\r\n                    <label>\r\n                        <input\r\n                            autoComplete={\"off\"}\r\n                            name=\"level\"\r\n                            type=\"radio\"\r\n                            value=\"Medium Access\"\r\n                            checked={data.level === 1}\r\n                            onChange={() => handleChange(\"level\", 1)}\r\n                        />\r\n                        Medium Access\r\n                    </label>\r\n                </div>\r\n                <div className={\"radio-button\"}>\r\n                    <label>\r\n                        <input\r\n                            autoComplete={\"off\"}\r\n                            name=\"level\"\r\n                            type=\"radio\"\r\n                            value=\"All access\"\r\n                            checked={data.level === 2}\r\n                            onChange={() => handleChange(\"level\", 2)}\r\n                        />\r\n                        All Access\r\n                    </label>\r\n                </div>\r\n                <InputField\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    className={\"user-box\"}\r\n                />\r\n                <button type=\"submit\" value=\"Submit\" className={\"sign-up\"}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    Sign Up\r\n                </button>\r\n            </form>\r\n            <ErrorDisplay showError={apiError.exists} errorContent={apiError.content}/>\r\n            <Link to={\"/login\"} className={\"log-in\"}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>Log In</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUp;"],"sourceRoot":""}